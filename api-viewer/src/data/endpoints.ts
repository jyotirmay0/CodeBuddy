import { ApiEndpoint } from "@/types/api";

export const API_BASE_URL =import.meta.env.VITE_BACKEND_URL;

export const endpoints: ApiEndpoint[] = [
  // Auth endpoints
  {
    id: "auth-register",
    category: "auth",
    method: "POST",
    url: "/auth/register",
    description: "Register a new user account",
    requiresAuth: false,
    bodyFields: [
      { name: "username", type: "text", required: true, placeholder: "Enter username" },
      { name: "email", type: "email", required: true, placeholder: "Enter email" },
      { name: "password", type: "password", required: true, placeholder: "Enter password" },
    ],
  },
  {
    id: "auth-login",
    category: "auth",
    method: "POST",
    url: "/auth/login",
    description: "Login to your account",
    requiresAuth: false,
    bodyFields: [
      { name: "credential", type: "text", required: true, placeholder: "Username or email" },
      { name: "password", type: "password", required: true, placeholder: "Enter password" },
    ],
  },
  {
    id: "auth-send-otp",
    category: "auth",
    method: "POST",
    url: "/auth/send-otp",
    description: "Send OTP to email for verification",
    requiresAuth: false,
    bodyFields: [
      { name: "email", type: "email", required: true, placeholder: "Enter email" },
    ],
  },
  {
    id: "auth-verify-otp",
    category: "auth",
    method: "POST",
    url: "/auth/verify-otp",
    description: "Verify OTP and complete registration",
    requiresAuth: false,
    bodyFields: [
      { name: "email", type: "email", required: true, placeholder: "Enter email" },
      { name: "otp", type: "text", required: true, placeholder: "Enter OTP code" },
    ],
  },
  {
    id: "auth-logout",
    category: "auth",
    method: "GET",
    url: "/auth/logout",
    description: "Logout from your account",
    requiresAuth: true,
  },
  {
    id: "auth-refresh",
    category: "auth",
    method: "GET",
    url: "/auth/refresh-token",
    description: "Refresh access token",
    requiresAuth: false,
  },
  
  // Project endpoints
  {
    id: "project-create",
    category: "project",
    method: "POST",
    url: "/project",
    description: "Create a new project",
    requiresAuth: true,
    bodyFields: [
      { name: "name", type: "text", required: true, placeholder: "Project name" },
      { name: "description", type: "textarea", required: true, placeholder: "Project description" },
      { name: "skills", type: "array", required: true, placeholder: "Skills (comma-separated)" },
      { name: "requirements", type: "text", required: true, placeholder: "Requirements" },
    ],
  },
  {
    id: "project-request-join",
    category: "project",
    method: "POST",
    url: "/project/:id/request",
    description: "Request to join a project",
    requiresAuth: true,
    bodyFields: [
      { name: "id", type: "text", required: true, placeholder: "Project ID" },
    ],
  },
  {
    id: "project-accept-request",
    category: "project",
    method: "PUT",
    url: "/project/:id/accept/:userId",
    description: "Accept join request (Owner only)",
    requiresAuth: true,
    bodyFields: [
      { name: "id", type: "text", required: true, placeholder: "Project ID" },
      { name: "userId", type: "text", required: true, placeholder: "User ID to accept" },
    ],
  },
  {
    id: "project-close",
    category: "project",
    method: "PATCH",
    url: "/project/:id/close",
    description: "Close project to new requests",
    requiresAuth: true,
    bodyFields: [
      { name: "id", type: "text", required: true, placeholder: "Project ID" },
    ],
  },
  {
    id: "project-get-open",
    category: "project",
    method: "GET",
    url: "/project/open",
    description: "Get all open projects matching your skills",
    requiresAuth: true,
  },
  {
    id: "project-get-mine",
    category: "project",
    method: "GET",
    url: "/project/mine",
    description: "Get projects you own",
    requiresAuth: true,
  },
  {
    id: "project-get-joined",
    category: "project",
    method: "GET",
    url: "/project/joined",
    description: "Get projects you've joined",
    requiresAuth: true,
  },
  {
    id: "project-get-by-id",
    category: "project",
    method: "GET",
    url: "/project/:id",
    description: "Get project details by ID",
    requiresAuth: true,
    bodyFields: [
      { name: "id", type: "text", required: true, placeholder: "Project ID" },
    ],
  },
  {
    id: "project-update",
    category: "project",
    method: "PUT",
    url: "/project/:id",
    description: "Update project details",
    requiresAuth: true,
    bodyFields: [
      { name: "id", type: "text", required: true, placeholder: "Project ID" },
      { name: "name", type: "text", required: false, placeholder: "Project name" },
      { name: "description", type: "textarea", required: false, placeholder: "Project description" },
      { name: "skills", type: "array", required: false, placeholder: "Skills (comma-separated)" },
      { name: "requirements", type: "text", required: false, placeholder: "Requirements" },
    ],
  },
  {
    id: "project-delete",
    category: "project",
    method: "DELETE",
    url: "/project/:id",
    description: "Delete a project",
    requiresAuth: true,
    bodyFields: [
      { name: "id", type: "text", required: true, placeholder: "Project ID" },
    ],
  },
  {
    id: "project-reject-request",
    category: "project",
    method: "DELETE",
    url: "/project/:id/reject/:userId",
    description: "Reject join request",
    requiresAuth: true,
    bodyFields: [
      { name: "id", type: "text", required: true, placeholder: "Project ID" },
      { name: "userId", type: "text", required: true, placeholder: "User ID to reject" },
    ],
  },
  {
    id: "project-remove-member",
    category: "project",
    method: "DELETE",
    url: "/project/:id/remove/:userId",
    description: "Remove member from project",
    requiresAuth: true,
    bodyFields: [
      { name: "id", type: "text", required: true, placeholder: "Project ID" },
      { name: "userId", type: "text", required: true, placeholder: "User ID to remove" },
    ],
  },
  {
    id: "project-leave",
    category: "project",
    method: "PATCH",
    url: "/project/:id/leave",
    description: "Leave a project",
    requiresAuth: true,
    bodyFields: [
      { name: "id", type: "text", required: true, placeholder: "Project ID" },
    ],
  },

  // User endpoints
  {
    id: "user-send-buddy-request",
    category: "user",
    method: "POST",
    url: "/user/send-request/:buddyId",
    description: "Send buddy request",
    requiresAuth: true,
    bodyFields: [
      { name: "buddyId", type: "text", required: true, placeholder: "Buddy User ID" },
    ],
  },
  {
    id: "user-accept-buddy",
    category: "user",
    method: "PATCH",
    url: "/user/buddy-requests/:buddyId/accept",
    description: "Accept buddy request",
    requiresAuth: true,
    bodyFields: [
      { name: "buddyId", type: "text", required: true, placeholder: "Buddy User ID" },
    ],
  },
  {
    id: "user-reject-buddy",
    category: "user",
    method: "DELETE",
    url: "/user/buddy-requests/:buddyId/reject",
    description: "Reject buddy request",
    requiresAuth: true,
    bodyFields: [
      { name: "buddyId", type: "text", required: true, placeholder: "Buddy User ID" },
    ],
  },
  {
    id: "user-buddy-requests",
    category: "user",
    method: "GET",
    url: "/user/buddy-requests",
    description: "Get pending buddy requests",
    requiresAuth: true,
  },
  {
    id: "user-buddy-list",
    category: "user",
    method: "GET",
    url: "/user/buddies",
    description: "Get your buddy list",
    requiresAuth: true,
  },
  {
    id: "user-buddy-suggestions",
    category: "user",
    method: "GET",
    url: "/user/buddy-suggestions",
    description: "Get AI-powered buddy suggestions",
    requiresAuth: true,
  },
  {
    id: "user-buddy-details",
    category: "user",
    method: "GET",
    url: "/user/buddy-details/:id",
    description: "Get buddy details by ID",
    requiresAuth: true,
    bodyFields: [
      { name: "id", type: "text", required: true, placeholder: "User ID" },
    ],
  },
  {
    id: "user-upload-pic",
    category: "user",
    method: "POST",
    url: "/user/upload-pic",
    description: "Upload profile picture",
    requiresAuth: true,
    bodyFields: [
      { name: "image", type: "file", required: true, placeholder: "Select image" },
    ],
  },
  {
    id: "user-update-contact",
    category: "user",
    method: "PATCH",
    url: "/user/update-contact",
    description: "Update contact information",
    requiresAuth: true,
    bodyFields: [
      { name: "contact", type: "text", required: true, placeholder: "Contact number" },
    ],
  },
  {
    id: "user-details",
    category: "user",
    method: "GET",
    url: "/user/details",
    description: "Get your user details",
    requiresAuth: true,
  },
  {
    id: "user-update-password",
    category: "user",
    method: "PATCH",
    url: "/user/update-password",
    description: "Update password",
    requiresAuth: true,
    bodyFields: [
      { name: "oldPassword", type: "password", required: true, placeholder: "Current password" },
      { name: "newPassword", type: "password", required: true, placeholder: "New password" },
    ],
  },
  {
    id: "user-update-details",
    category: "user",
    method: "PATCH",
    url: "/user/update-details",
    description: "Update user profile details",
    requiresAuth: true,
    bodyFields: [
      { name: "name", type: "text", required: false, placeholder: "Full name" },
      { name: "dob", type: "text", required: false, placeholder: "Date of birth" },
      { name: "location", type: "text", required: false, placeholder: "Location" },
      { name: "bio", type: "textarea", required: false, placeholder: "Bio" },
      { name: "skills", type: "array", required: false, placeholder: "Skills (comma-separated)" },
      { name: "interests", type: "array", required: false, placeholder: "Interests (comma-separated)" },
      { name: "hobbies", type: "array", required: false, placeholder: "Hobbies (comma-separated)" },
    ],
  },
  {
    id: "user-discover",
    category: "user",
    method: "GET",
    url: "/user/discover",
    description: "Discover new users",
    requiresAuth: true,
  },
  {
    id: "user-stats",
    category: "user",
    method: "GET",
    url: "/user/stats",
    description: "Get dashboard statistics",
    requiresAuth: true,
  },
  {
    id: "user-send-message",
    category: "user",
    method: "POST",
    url: "/user/send-message/:buddyId",
    description: "Send buddy request with message",
    requiresAuth: true,
    bodyFields: [
      { name: "buddyId", type: "text", required: true, placeholder: "Buddy User ID" },
      { name: "content", type: "textarea", required: true, placeholder: "Message content" },
    ],
  },
  {
    id: "user-inbox",
    category: "user",
    method: "GET",
    url: "/user/inbox",
    description: "Get all open chats",
    requiresAuth: true,
  },
  {
    id: "user-dm-chat",
    category: "user",
    method: "GET",
    url: "/user/chat/:buddyId",
    description: "Get DM chat with buddy",
    requiresAuth: true,
    bodyFields: [
      { name: "buddyId", type: "text", required: true, placeholder: "Buddy User ID" },
    ],
  },
  {
    id: "database-stats",
    category: "database",
    method: "GET",
    url: "/auth/db",
    description: "Get live collection statistics",
    requiresAuth: false,
  },
];